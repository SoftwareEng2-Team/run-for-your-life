OBTAIN SOURCE CODE: Any developer seeking to obtain the source code for the Run For Your Life game can do so via our GitHub repository (https://github.com/SoftwareEng2-Team/run-for-your-life/).
- To download the source code, developers can use the command 'git clone git@github.com:SoftwareEng2-Team/run-for-your-life.git' in their local terminal.
- Ensure you are currently in the desired directory before running the command (i.e., cd desired_directory).
- The game files are stored in the /gamedev directory.
- Older files are saved in the /gamedev/defunct directory. These are kept for reference only.
- Most of the frontend and backend are stored in /gamedev/public_html. Here you will find the HTML / CSS files for the front end and some of the JS files for the back end.

DIRECTORIES: This repository includes several directories to better categorize and store resources associated with our game.
- /database: includes all information about connecting to our database. The database is used for storing user credentials and location updates.
- /documentation: the current directory this file is stored in. Also stores other documentation for the game.
- /gamedev: where the source code for our game is stored.
- /living-doc-versions: older versions of our living document for this project are stored here.
- /reports: our weekly report will developing this game is stored here.
- Other files: other files, such as our current living document and README file, are stored in the main repository.

HOW TO BUILD SOFTWARE:
- If developers want to run our game locally for testing purposes, they can do so with the help of npm and node.js. A node.js framework is already included, so the developer
simply needs to run two commands in the /gamedev directory. 
- 'npm install' installs the required node modules 
- 'npm start' starts running the application locally on port 3000
- Now, you can access our application via 'http://localhost:3000/'

- Otherwise, to access our application that is hosted and updated, access the link: https://web.engr.oregonstate.edu/~mungerbr/RFYL/public_html/

HOW TO TEST THE SOFTWARE: This application's backend is tested using Selenium and Google ChromeDriver. Install Selenium using 'npm install selenium-webdriver' and download ChromeDriver from the link 'https://developer.chrome.com/docs/chromedriver/downloads'. You can run existing test scripts files in JavaScript by invoking 'node <path to testscript>/testscript.js'. Any future tests should be kept in a testing directory. 

HOW TO ADD NEW TESTS: New tests can be added by creating a new script or cloning an existing script and adding to that. All testing should be done in an async() function such that you can await driver to open and load the frontend. 

HOW TO BUILD A RELEASE OF THE SOFTWARE:
- After building the software the developer should have a new version with an updated ID number that correlates to that new version.
- They must update the version numbers in the code, documentation, and configuration files.
- They should place the new version files into a separate folder inside our versions folder to help keep track of our progress.
- Some basic sanity checks the developer should perform are:
  - Launch test: Ensuring the software does not crash on launch.
  - Game playtest: Playing through key features of the game to make sure it performs basic functionality.
  - File checking: Checking assets within files to ensure everything is included and referenced correctly.
  - Performance test: Ensuring the game runs smoothly.
  - Error Logging: Checking logs for unexpected errors or warnings.
  - Cross-Platform Testing: Checking to see to make sure it can build on mobile device as well as computers.





